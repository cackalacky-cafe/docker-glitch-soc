name: Build glitch-soc docker Image

on:
  push:
    branches: [ "master" ]
  workflow_dispatch:
    inputs:
      force:
        description: 'Force create '
        type: boolean
      dryrun:
        description: 'Dry-run'
        type: boolean
jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    # last-commitが存在するかチェックして存在していれば取得。なければダミーで作成
    - name: 'Check last-commit artifact'
      uses: xSAVIKx/artifact-exists-action@v0
      id: check_artifact
      with:
        name: 'last-commit'

    - name: 'Create null artifact.txt'
      if: steps.check_artifact.outputs.exists == 'false'
      run: |
        mkdir -p last-commit
        echo "dummy" > last-commit/last-commit.txt

    - name: 'Upload dummy artifact'
      if: steps.check_artifact.outputs.exists == 'false'
      uses: actions/upload-artifact@v3
      with:
        name: 'last-commit'
        path: last-commit

    - name: 'Clean up dummy artifact'
      if: steps.check_artifact.outputs.exists == 'false'
      run: |
        rm -rf last-commit

    # 本処理。
    - uses: actions/checkout@v3

    - name: 'Download last-commit artifact'
      uses: actions/download-artifact@v3
      id: artifact
      with:
        name: 'last-commit'
        path: last-commit

    - name: 'glitch-soc更新があるかチェック'
      run: |
        WORK=`pwd`

        echo ${{steps.artifact.outputs.download-path}}
        LAST_TAG=`cat ${{steps.artifact.outputs.download-path}}/last-commit.txt`
        echo "LAST_TAG=$LAST_TAG" >> $GITHUB_ENV
        TAG=`git ls-remote --heads git://git.kernel.org/pub/scm/linux/kernel/git/torvalds/linux.git | cut -f 1`
        
        echo "check commit-id head=${TAG} last-built=${LAST_TAG}"
        if [ "${{env.force}}" = "false" ]; then
          if [ "$LAST_TAG" = "$TAG" ]; then
            echo "更新なし"
            exit 1
          fi
        else 
          echo "FORCE rebuild skipping commit-id check"
        fi
        
        # local docker image tag
        DOCKER_TAG=`date '+%Y%m%d_%H'`
        DOCKERHUB_IMAGENAME="yakumosaki/glitch-soc"

        cd ${WORK}/mastodon
        git clone https://github.com/glitch-soc/mastodon.git

        cd ${WORK}
        ./build.sh $DOCKERHUB_IMAGENAME $DOCKER_TAG

        echo "Update last built commit-id artifact"
        echo $TAG > ${{steps.artifact.outputs.download-path}}/last-commit.txt

    - uses: actions/upload-artifact@v3
      with:
        name: 'last-commit'
        path: last-commit
