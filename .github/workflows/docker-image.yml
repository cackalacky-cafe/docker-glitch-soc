name: Docker Image CI

on:
  push:
    branches: [ "master" ]
  workflow_dispatch:
    inputs:
      environment:
        description: 'Environment to run tests against'
        type: environment
        required: true

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - name: 'Check last-commit artifact'
      uses: xSAVIKx/artifact-exists-action@v0
      id: check_artifact
      with:
        name: 'artifact.txt'

    - name: 'Create null artifact.txt'
      if: steps.check_artifact.outputs.exists == 'false'
      run: |
        mkdir -p last-commit
        echo "dummy" > last-commit/last-commit.txt

    - name: 'Upload dummy artifact'
      if: steps.check_artifact.outputs.exists == 'false'
      uses: actions/upload-artifact@v3
      with:
        name: 'last-commit'
        path: last-commit

    - name: 'Clean up dummy artifact'
      if: steps.check_artifact.outputs.exists == 'false'
      run: |
        rm -rf last-commit

    - name: 'Download last-commit artifact'
      uses: actions/download-artifact@v3
      id: artifact
      with:
        name: 'last-commit'
        path: last-commit

    - name: 'Echo download path'
      run: |
        echo ${{steps.artifact.outputs.download-path}}
        # cat ${{steps.artifact.outputs.download-path}} 
        ls -alr .
        # LAST_TAG=`cat ${{steps.artifact.outputs.download-path}}`
        echo "LAST_TAG=AAAAA$LAST_TAG" >> $GITHUB_ENV

    - name: Debug output
      run: echo "last tag is $LAST_TAG"

    # - uses: actions/checkout@v3
    - name: Fetch release version
      run: |
        DOCKER_TAG=`date '+%Y%m%d_%H'`
        DOCKERHUB_IMAGENAME="yakumosaki/glitch-soc"
        cat $DOCKER_TAG > ${{steps.artifact.outputs.download-path}}
        echo $DOCKER_TAG

    - uses: actions/upload-artifact@v3
      with:
        name: 'last-commit'
        path: ${{steps.artifact.outputs.download-path}}
